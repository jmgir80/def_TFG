/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package in2.liferay.crud.intranet.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Vacaciones service. Represents a row in the &quot;Vacaciones_Vacaciones&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>in2.liferay.crud.intranet.model.impl.VacacionesModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>in2.liferay.crud.intranet.model.impl.VacacionesImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Vacaciones
 * @generated
 */
@ProviderType
public interface VacacionesModel
	extends BaseModel<Vacaciones>, GroupedModel, ShardedModel,
			StagedAuditedModel, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a vacaciones model instance should use the {@link Vacaciones} interface instead.
	 */

	/**
	 * Returns the primary key of this vacaciones.
	 *
	 * @return the primary key of this vacaciones
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this vacaciones.
	 *
	 * @param primaryKey the primary key of this vacaciones
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this vacaciones.
	 *
	 * @return the uuid of this vacaciones
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this vacaciones.
	 *
	 * @param uuid the uuid of this vacaciones
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the vac ID of this vacaciones.
	 *
	 * @return the vac ID of this vacaciones
	 */
	public long getVacId();

	/**
	 * Sets the vac ID of this vacaciones.
	 *
	 * @param vacId the vac ID of this vacaciones
	 */
	public void setVacId(long vacId);

	/**
	 * Returns the group ID of this vacaciones.
	 *
	 * @return the group ID of this vacaciones
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this vacaciones.
	 *
	 * @param groupId the group ID of this vacaciones
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this vacaciones.
	 *
	 * @return the company ID of this vacaciones
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this vacaciones.
	 *
	 * @param companyId the company ID of this vacaciones
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this vacaciones.
	 *
	 * @return the user ID of this vacaciones
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this vacaciones.
	 *
	 * @param userId the user ID of this vacaciones
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this vacaciones.
	 *
	 * @return the user uuid of this vacaciones
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this vacaciones.
	 *
	 * @param userUuid the user uuid of this vacaciones
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this vacaciones.
	 *
	 * @return the user name of this vacaciones
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this vacaciones.
	 *
	 * @param userName the user name of this vacaciones
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this vacaciones.
	 *
	 * @return the create date of this vacaciones
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this vacaciones.
	 *
	 * @param createDate the create date of this vacaciones
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this vacaciones.
	 *
	 * @return the modified date of this vacaciones
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this vacaciones.
	 *
	 * @param modifiedDate the modified date of this vacaciones
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the desde of this vacaciones.
	 *
	 * @return the desde of this vacaciones
	 */
	public Date getDesde();

	/**
	 * Sets the desde of this vacaciones.
	 *
	 * @param desde the desde of this vacaciones
	 */
	public void setDesde(Date desde);

	/**
	 * Returns the hasta of this vacaciones.
	 *
	 * @return the hasta of this vacaciones
	 */
	public Date getHasta();

	/**
	 * Sets the hasta of this vacaciones.
	 *
	 * @param hasta the hasta of this vacaciones
	 */
	public void setHasta(Date hasta);

	/**
	 * Returns the comentarios of this vacaciones.
	 *
	 * @return the comentarios of this vacaciones
	 */
	@AutoEscape
	public String getComentarios();

	/**
	 * Sets the comentarios of this vacaciones.
	 *
	 * @param comentarios the comentarios of this vacaciones
	 */
	public void setComentarios(String comentarios);

	/**
	 * Returns the calendar booking ID of this vacaciones.
	 *
	 * @return the calendar booking ID of this vacaciones
	 */
	public long getCalendarBookingId();

	/**
	 * Sets the calendar booking ID of this vacaciones.
	 *
	 * @param calendarBookingId the calendar booking ID of this vacaciones
	 */
	public void setCalendarBookingId(long calendarBookingId);

	/**
	 * Returns the status of this vacaciones.
	 *
	 * @return the status of this vacaciones
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this vacaciones.
	 *
	 * @param status the status of this vacaciones
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this vacaciones.
	 *
	 * @return the status by user ID of this vacaciones
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this vacaciones.
	 *
	 * @param statusByUserId the status by user ID of this vacaciones
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this vacaciones.
	 *
	 * @return the status by user uuid of this vacaciones
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this vacaciones.
	 *
	 * @param statusByUserUuid the status by user uuid of this vacaciones
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this vacaciones.
	 *
	 * @return the status by user name of this vacaciones
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this vacaciones.
	 *
	 * @param statusByUserName the status by user name of this vacaciones
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this vacaciones.
	 *
	 * @return the status date of this vacaciones
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this vacaciones.
	 *
	 * @param statusDate the status date of this vacaciones
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns <code>true</code> if this vacaciones is approved.
	 *
	 * @return <code>true</code> if this vacaciones is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this vacaciones is denied.
	 *
	 * @return <code>true</code> if this vacaciones is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this vacaciones is a draft.
	 *
	 * @return <code>true</code> if this vacaciones is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this vacaciones is expired.
	 *
	 * @return <code>true</code> if this vacaciones is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this vacaciones is inactive.
	 *
	 * @return <code>true</code> if this vacaciones is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this vacaciones is incomplete.
	 *
	 * @return <code>true</code> if this vacaciones is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this vacaciones is pending.
	 *
	 * @return <code>true</code> if this vacaciones is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this vacaciones is scheduled.
	 *
	 * @return <code>true</code> if this vacaciones is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

}